trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: templates
      type: github
      name: osisoft/OSI-Samples
      endpoint: osisoft/OSI-Samples

variables:
  - template: '/miscellaneous/build_templates/variables.yml@templates'
  - name: CredFile
    value: config.ini
  - name: CredFileLibraryOCS
    value: product-readiness.sds_python_ocs.ini
  - name: CredFileLibraryEDS
    value: product-readiness.sds_python_eds.ini
  - name: analysisProject
    value: SDS_Python

jobs:
  - job: Tests_OCS
    pool:
      name: OpsGuild
      demands: LinuxAgentEvaluation -equals true
    # strategy:
    #   matrix:
    #     linux:
    #       imageName: ubuntu-latest
    #     windows:
    #       imageName: windows-latest
    # pool:
    #   vmImage: $(imageName)
    steps:
      - template: '/miscellaneous/build_templates/config.yml@templates'
        parameters:
          fileOriginal: $(CredFile)
          fileLibrary: $(CredFileLibraryOCS)

      - script: python3 --version

      # - task: UsePythonVersion@0
      #   inputs:
      #     versionSpec: '3.6'
      #     architecture: 'x64'
      #   displayName: 'Specify Python version'

      - script: |
          echo Install test tools   
          pip3 install pytest
          echo Install requirements
          pip3 install -r requirements.txt
          echo Run tests
          python3 -m pytest --junitxml=junit/test-results.xml ./test.py
          echo Complete
        displayName: 'Run tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-*.xml'
          failTaskOnFailedTests: true
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Publish test results'
        condition: always()

  # - job: Tests_EDS
  #   pool:
  #     name: 00-OSIManaged-Test
  #     demands: COMPUTERNAME -equals $(buildAgent)
  #   steps:
  #     - template: '/miscellaneous/build_templates/config.yml@templates'
  #       parameters:
  #         fileOriginal: $(CredFile)
  #         fileLibrary: $(CredFileLibraryEDS)
  #         filePath: $(projPath)

  #     - bash: |
  #         echo Install test tools
  #         pip install pytest
  #         echo Install requirements
  #         pip install -r requirements.txt
  #         echo Run tests
  #         python -m pytest --junitxml=junit/test-results.xml ./test.py
  #         echo Complete
  #       workingDirectory: $(Build.SourcesDirectory)$(projPath)/
  #       displayName: 'Run tests'

  #     - task: PublishTestResults@2
  #       inputs:
  #         testResultsFiles: '**/test-*.xml'
  #         failTaskOnFailedTests: true
  #         testRunTitle: '$(Agent.JobName) on $(imageName)'
  #       displayName: 'Publish test results'
  #       condition: always()

  # - template: '/miscellaneous/build_templates/analysis.yml@templates'
  #   parameters:
  #     language: python
